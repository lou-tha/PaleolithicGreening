# File:    plot_2x2.R
# Author:  Florian Linsel, Louise Tharandt
#############################################
# libraries
library(tidyverse)
library(dplyr)
library(purrr)
library(png)
library(gridExtra)
library(RStoolbox)
library(raster)
library(rgdal)
setwd("../")
setwd("VegPer_QGIS/extdata")
# plotting the spatial data including the calculated arrows to show the green wave
print2x2 <- function (period,parameter) {
print(paste(parameter,'_',period[[1]][1],'_min.png',sep=''))
print(paste(parameter,'_',period[[2]][1],'_min.png',sep=''))
im1 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_min.png',sep=''))
im2 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_max.png',sep=''))
im3 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_min.png',sep=''))
im4 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_max.png',sep=''))
plot_output_png <- grid.arrange(
ggRGB(img = im1,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im2,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im3,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im4,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ncol=2)
#plot_output_png
plot_output <- paste('2x2/',parameter,'/',period[[1]][1],'_',period[[2]][1],'.png', sep='')
ggsave(plot_output, plot_output_png, device = png(), units = c("cm"), dpi = 1200, width=25, height=16)
while (!is.null(dev.list()))  dev.off()
}
plot_2x2 <- function(parameter,period){
if (parameter == "LGM"){
print2x2 (list('21Day','21Day'),parameter)
}else{
lapply(period,parameter,print2x2)
}
setwd("../")
setwd("VegPer_QGIS/extdata")
setwd("../")
getwd()
setwd("VegPer_QGIS/extdata")
getwd()
plot_2x2 <- function(parameter,period){
if (parameter == "LGM"){
print2x2 (list('21Day','21Day'),parameter)
}else{
lapply(period,parameter,print2x2)
}
print2x2 <- function (period,parameter) {
print(paste(parameter,'_',period[[1]][1],'_min.png',sep=''))
print(paste(parameter,'_',period[[2]][1],'_min.png',sep=''))
im1 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_min.png',sep=''))
im2 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_max.png',sep=''))
im3 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_min.png',sep=''))
im4 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_max.png',sep=''))
plot_output_png <- grid.arrange(
ggRGB(img = im1,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im2,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im3,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im4,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ncol=2)
#plot_output_png
plot_output <- paste('2x2/',parameter,'/',period[[1]][1],'_',period[[2]][1],'.png', sep='')
ggsave(plot_output, plot_output_png, device = png(), units = c("cm"), dpi = 1200, width=25, height=16)
while (!is.null(dev.list()))  dev.off()
}
# File:    main.R
# Author:  Florian Linsel, Louise Tharandt
#############################################
#libraries
library(tidyverse)
library(dplyr)
library(purrr)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source("../VegPer_R_Scripts/Calc21Day.R")
source("../VegPer_R_Scripts/CalcStepsStandardised.R")
source("../VegPer_R_Scripts/CalcFilter.R")
source("../VegPer_R_Scripts/plot_2x2.R")
#############################################
# set working directory
setwd("../") #reference inside of the github / working directory folder
# global parameter:
parameter <- c("BlackSea" ,"NGRIP", "LGM") #name of the period data sets
# create new directories and folders for the results
for (p in parameter){
dir.create(file.path(paste0('VegPer_Results/')), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Calc_Step_Results/Calc_Step_',p)), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/21Day_',p,'_Results')), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Filter_Results')), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Filter_Results/Filter_Results_',p)), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Filter_Results/Filter_Results_',p,'/nodes')), showWarnings = FALSE)
}
# input files
# LGM base data that will be used to add factors to get the temperature data of stadial and interstadial periods
LGM <- read.csv("VegPer_Base_Data/LGM_base_data.csv", header = T,  fileEncoding="UTF-8-BOM")
# list of stadial and interstadial climatic periods of interest
period <- c("GS-3", "GI-3", "GS-4", "GI-4", "GS-5.1", "GI-5.1", "GS-5.2", "GI-5.2",
"GS-6", "GI-6", "GS-7", "GI-7", "GS-8", "GI-8", "GS-9", "GI-9")
# File:    main.R
# Author:  Florian Linsel, Louise Tharandt
#############################################
#libraries
library(tidyverse)
library(dplyr)
library(purrr)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source("../VegPer_R_Scripts/Calc21Day.R")
source("../VegPer_R_Scripts/CalcStepsStandardised.R")
source("../VegPer_R_Scripts/CalcFilter.R")
source("../VegPer_R_Scripts/plot_2x2.R")
#############################################
# set working directory
setwd("../") #reference inside of the github / working directory folder
# global parameter:
parameter <- c("BlackSea" ,"NGRIP", "LGM") #name of the period data sets
# create new directories and folders for the results
for (p in parameter){
dir.create(file.path(paste0('VegPer_Results/')), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Calc_Step_Results/Calc_Step_',p)), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/21Day_',p,'_Results')), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Filter_Results')), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Filter_Results/Filter_Results_',p)), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Filter_Results/Filter_Results_',p,'/nodes')), showWarnings = FALSE)
}
# input files
# LGM base data that will be used to add factors to get the temperature data of stadial and interstadial periods
LGM <- read.csv("VegPer_Base_Data/LGM_base_data.csv", header = T,  fileEncoding="UTF-8-BOM")
getwd()
#############################################
# set working directory
setwd("../") #reference inside of the github / working directory folder
getwd()
# File:    main.R
# Author:  Florian Linsel, Louise Tharandt
#############################################
#libraries
library(tidyverse)
library(dplyr)
library(purrr)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source("../VegPer_R_Scripts/Calc21Day.R")
source("../VegPer_R_Scripts/CalcStepsStandardised.R")
source("../VegPer_R_Scripts/CalcFilter.R")
source("../VegPer_R_Scripts/plot_2x2.R")
#############################################
# set working directory
setwd("../") #reference inside of the github / working directory folder
# global parameter:
parameter <- c("BlackSea" ,"NGRIP", "LGM") #name of the period data sets
# create new directories and folders for the results
for (p in parameter){
dir.create(file.path(paste0('VegPer_Results/')), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Calc_Step_Results/Calc_Step_',p)), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/21Day_',p,'_Results')), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Filter_Results')), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Filter_Results/Filter_Results_',p)), showWarnings = FALSE)
dir.create(file.path(paste0('VegPer_Results/Filter_Results/Filter_Results_',p,'/nodes')), showWarnings = FALSE)
}
# input files
# LGM base data that will be used to add factors to get the temperature data of stadial and interstadial periods
LGM <- read.csv("VegPer_Base_Data/LGM_base_data.csv", header = T,  fileEncoding="UTF-8-BOM")
# list of stadial and interstadial climatic periods of interest
period <- c("GS-3", "GI-3", "GS-4", "GI-4", "GS-5.1", "GI-5.1", "GS-5.2", "GI-5.2",
"GS-6", "GI-6", "GS-7", "GI-7", "GS-8", "GI-8", "GS-9", "GI-9")
plot_2x2 <- function(parameter,period){
if (parameter == "LGM"){
print2x2 (list('21Day','21Day'),parameter)
}else{
lapply(period,parameter,print2x2)
}
# File:    plot_2x2.R
# Author:  Florian Linsel, Louise Tharandt
#############################################
# libraries
library(tidyverse)
library(dplyr)
library(purrr)
library(png)
library(gridExtra)
library(RStoolbox)
library(raster)
library(rgdal)
setwd("../")
setwd("VegPer_QGIS/extdata")
# global parameter:
parameter <- c("BlackSea" ,"NGRIP", "LGM") #name of the period data sets
# list of stadial and interstadial climatic periods of interest
period <- c("GS-3", "GI-3", "GS-4", "GI-4", "GS-5.1", "GI-5.1", "GS-5.2", "GI-5.2",
"GS-6", "GI-6", "GS-7", "GI-7", "GS-8", "GI-8", "GS-9", "GI-9")
# plotting the spatial data including the calculated arrows to show the green wave
print2x2 <- function (period,parameter) {
print(paste(parameter,'_',period[[1]][1],'_min.png',sep=''))
print(paste(parameter,'_',period[[2]][1],'_min.png',sep=''))
im1 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_min.png',sep=''))
im2 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_max.png',sep=''))
im3 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_min.png',sep=''))
im4 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_max.png',sep=''))
plot_output_png <- grid.arrange(
ggRGB(img = im1,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im2,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im3,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im4,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ncol=2)
#plot_output_png
plot_output <- paste('2x2/',parameter,'/',period[[1]][1],'_',period[[2]][1],'.png', sep='')
ggsave(plot_output, plot_output_png, device = png(), units = c("cm"), dpi = 1200, width=25, height=16)
while (!is.null(dev.list()))  dev.off()
}
plot_2x2 <- function(parameter,period){
if (parameter == "LGM"){
print2x2 (list('21Day','21Day'),parameter)
}else{
lapply(period,parameter,print2x2)
}
# File:    plot_2x2.R
# Author:  Florian Linsel, Louise Tharandt
#############################################
# libraries
library(tidyverse)
library(dplyr)
library(purrr)
library(png)
library(gridExtra)
library(RStoolbox)
library(raster)
library(rgdal)
setwd("../")
setwd("VegPer_QGIS/extdata")
# global parameter:
parameter <- c("BlackSea" ,"NGRIP", "LGM") #name of the period data sets
# list of stadial and interstadial climatic periods of interest
period <- c("GS-3", "GI-3", "GS-4", "GI-4", "GS-5.1", "GI-5.1", "GS-5.2", "GI-5.2",
"GS-6", "GI-6", "GS-7", "GI-7", "GS-8", "GI-8", "GS-9", "GI-9")
period_concat <- list(list("GS-3", "GI-3"),list("GS-4", "GI-4"), list("GS-5.1", "GI-5.1"),list("GS-5.2", "GI-5.2"),
list("GS-6", "GI-6"),list("GS-7", "GI-7"), list("GS-8", "GI-8"),    list("GS-9", "GI-9")) # climatic periods of interest
# plotting the spatial data including the calculated arrows to show the green wave
print2x2 <- function (period,parameter) {
print(paste(parameter,'_',period[[1]][1],'_min.png',sep=''))
print(paste(parameter,'_',period[[2]][1],'_min.png',sep=''))
im1 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_min.png',sep=''))
im2 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_max.png',sep=''))
im3 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_min.png',sep=''))
im4 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_max.png',sep=''))
plot_output_png <- grid.arrange(
ggRGB(img = im1,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im2,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im3,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im4,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ncol=2)
#plot_output_png
plot_output <- paste('2x2/',parameter,'/',period[[1]][1],'_',period[[2]][1],'.png', sep='')
ggsave(plot_output, plot_output_png, device = png(), units = c("cm"), dpi = 1200, width=25, height=16)
while (!is.null(dev.list()))  dev.off()
}
plot_2x2 <- function(parameter,period){
if (parameter == "LGM"){
print2x2 (list('21Day','21Day'),parameter)
}else{
lapply(period,parameter,print2x2)
}
lapply (parameter,plot_2x2,period_concat)
# File:    plot_2x2.R
# Author:  Florian Linsel, Louise Tharandt
#############################################
# libraries
library(tidyverse)
library(dplyr)
library(purrr)
library(png)
library(gridExtra)
library(ggplot2)
library(RStoolbox)
library(raster)
library(rgdal)
setwd("../")
setwd("VegPer_QGIS/extdata")
# global parameter:
parameter <- c("BlackSea" ,"NGRIP", "LGM") #name of the period data sets
# list of stadial and interstadial climatic periods of interest
period <- c("GS-3", "GI-3", "GS-4", "GI-4", "GS-5.1", "GI-5.1", "GS-5.2", "GI-5.2",
"GS-6", "GI-6", "GS-7", "GI-7", "GS-8", "GI-8", "GS-9", "GI-9")
period_concat <- list(list("GS-3", "GI-3"),list("GS-4", "GI-4"), list("GS-5.1", "GI-5.1"),list("GS-5.2", "GI-5.2"),
list("GS-6", "GI-6"),list("GS-7", "GI-7"), list("GS-8", "GI-8"),    list("GS-9", "GI-9")) # climatic periods of interest
# plotting the spatial data including the calculated arrows to show the green wave
print2x2 <- function (period,parameter) {
print(paste(parameter,'_',period[[1]][1],'_min.png',sep=''))
print(paste(parameter,'_',period[[2]][1],'_min.png',sep=''))
im1 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_min.png',sep=''))
im2 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_max.png',sep=''))
im3 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_min.png',sep=''))
im4 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_max.png',sep=''))
plot_output_png <- grid.arrange(
ggRGB(img = im1,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im2,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im3,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im4,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ncol=2)
#plot_output_png
plot_output <- paste('2x2/',parameter,'/',period[[1]][1],'_',period[[2]][1],'.png', sep='')
ggsave(plot_output, plot_output_png, device = png(), units = c("cm"), dpi = 1200, width=25, height=16)
while (!is.null(dev.list()))  dev.off()
}
plot_2x2 <- function(parameter,period){
if (parameter == "LGM"){
print2x2 (list('21Day','21Day'),parameter)
}else{
lapply(period,parameter,print2x2)
}
lapply (parameter,plot_2x2,period_concat)
# File:    plot_2x2.R
# Author:  Florian Linsel, Louise Tharandt
#############################################
# libraries
library(tidyverse)
library(dplyr)
library(purrr)
library(png)
library(gridExtra)
library(ggplot)
library(RStoolbox)
library(raster)
library(rgdal)
setwd("../")
setwd("VegPer_QGIS/extdata")
# global parameter:
parameter <- c("BlackSea" ,"NGRIP", "LGM") #name of the period data sets
# list of stadial and interstadial climatic periods of interest
period <- c("GS-3", "GI-3", "GS-4", "GI-4", "GS-5.1", "GI-5.1", "GS-5.2", "GI-5.2",
"GS-6", "GI-6", "GS-7", "GI-7", "GS-8", "GI-8", "GS-9", "GI-9")
period_concat <- list(list("GS-3", "GI-3"),list("GS-4", "GI-4"), list("GS-5.1", "GI-5.1"),list("GS-5.2", "GI-5.2"),
list("GS-6", "GI-6"),list("GS-7", "GI-7"), list("GS-8", "GI-8"),    list("GS-9", "GI-9")) # climatic periods of interest
# plotting the spatial data including the calculated arrows to show the green wave
print2x2 <- function (period,parameter) {
print(paste(parameter,'_',period[[1]][1],'_min.png',sep=''))
print(paste(parameter,'_',period[[2]][1],'_min.png',sep=''))
im1 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_min.png',sep=''))
im2 <- stack(paste('QGIS/',parameter,'_',period[[1]][1],'_max.png',sep=''))
im3 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_min.png',sep=''))
im4 <- stack(paste('QGIS/',parameter,'_',period[[2]][1],'_max.png',sep=''))
plot_output_png <- grid.arrange(
ggRGB(img = im1,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im2,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[1]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im3,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (spring)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ggRGB(img = im4,r=1,g=2,b=3,maxpixels = 2e+06) + ggtitle(paste(parameter,' ',period[[2]][1],' (autumn)',sep='')) + xlab ("") + ylab ("") + guides(fill=FALSE) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()),
ncol=2)
#plot_output_png
plot_output <- paste('2x2/',parameter,'/',period[[1]][1],'_',period[[2]][1],'.png', sep='')
ggsave(plot_output, plot_output_png, device = png(), units = c("cm"), dpi = 1200, width=25, height=16)
while (!is.null(dev.list()))  dev.off()
}
plot_2x2 <- function(parameter,period){
if (parameter == "LGM"){
print2x2 (list('21Day','21Day'),parameter)
}else{
lapply(period,parameter,print2x2)
}
lapply (parameter,plot_2x2,period_concat)
